openapi: 3.0.0
info:
  title: Clinic Reservations API
  description: A simple API for managing patient appointments and doctor schedules.
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server
paths:
/patients:
  post:
    summary: Add a new patient
    operationId: addPatient
    tags:
      - Patient
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Patient"
    responses:
      "201":
        description: Patient added successfully

/patients/{id}:
  get:
    summary: Get details of a specific patient
    operationId: getPatientId
    tags:
      - Patient
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Details of the patient
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Patient"
      "404":
        description: Patient not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"

/patients/{id}/appointments:
  get:
    summary: Get all history of a patient
    operationId: getPatientHistory
    tags:
      - Patient
    parameters:
      - name: id
        in: path
        required: true
        description: The ID of the patient whose appointment history is to be retrieved
        schema:
          type: integer
    responses:
      "200":
        description: List of all appointments for the patient
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Appointment"
      "404":
        description: Patient not found. The patient with the provided ID does not exist in the system.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"

/doctors:
  get:
    summary: Retrieve a list of all doctors
    operationId: getAllDoctors
    tags:
      - Doctor
    responses:
      "200":
        description: A list of all doctors
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Doctor"

/doctors/{id}:
  get:
    summary: Get details of a specific doctor
    operationId: getDoctorId
    tags:
      - Doctor
    parameters:
      - name: id
        in: path
        required: true
        description: The ID of the doctor whose details are to be retrieved
        schema:
          type: integer
    responses:
      "200":
        description: Details of the doctor
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Doctor"
      "404":
        description: Doctor not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"

/doctors/{id}/available-slots:
  get:
    summary: Get available slots for a specific doctor on a given date
    operationId: getDoctorAvailableSlots
    tags:
      - Doctor
    parameters:
      - name: id
        in: path
        required: true
        description: The ID of the doctor whose available slots are to be retrieved
        schema:
          type: integer
      - name: date
        in: query
        required: true
        description: The date for which to retrieve available slots (format: YYYY-MM-DD)
        schema:
          type: string
          format: date
    responses:
      "200":
        description: A list of available slots for the doctor on the given date
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  slot_id:
                    type: integer
                    example: 1
                  time:
                    type: string
                    format: date-time
                    example: "2025-03-20T09:00:00Z"
                  status:
                    type: string
                    example: "available"
      "404":
        description: Doctor or available slots not found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"


components:
  schemas:
    Patient:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Jan
        surname:
          type: string
          example: Kowalski
        date_of_birth:
          type: string
          format: date
          example: "1985-03-25"
        email:
          type: string
          format: email
          example: jan.kowalski@example.com
        phone:
          type: string
          example: "123456789"
    
    Doctor:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Anna
        surname:
          type: string
          example: Nowak
        specialization:
          type: string
          example: "Cardiologist"
        email:
          type: string
          format: email
          example: anna.nowak@clinic.com
        phone:
          type: string
          example: "987654321"
    
    Appointment:
      type: object
      properties:
        id:
          type: integer
          example: 1
        patient_id:
          type: integer
          example: 1
        doctor_id:
          type: integer
          example: 1
        appointment_date:
          type: string
          format: date-time
          example: "2025-03-20T14:00:00Z"
        status:
          type: string
          enum:
            - scheduled
            - completed
            - cancelled
          example: "scheduled"

    Error:
      type: object
      properties:
        message:
          type: string
          example: "Patient not found"
        code:
          type: integer
          example: 404